Today: Objects
- Basics
- Variants of object encoding
-Game: oopsie
Quiz

What are objects?
Data structures
Methods for access and management 
(+ a location for mutable state)
(+ abstraction and polymorphism)

Different Approaches
Open, dynamic
closed, explicit (Closed = safe javaScript code )
mixed, classified

Videofor basics: 
https://github.com/gtify .... check class 

Open, Dynamic 

const = good {
    firstname: "Good",
    lastname: "Boy",
    getName : function (){
        return this.firstname + " " + this.lastname
    }
};

//No safety but super dynamic
//unobvious how to share structure 
//beware of "this"! see adam breindl last week

---------
Closed, explicit 
function Person (first, last) {
    let firstname= first;
    let lastname = last;
    return {
        getName: function(){
            return firstname + " " + lastname
        }
    }
}
// best safety, easy to share structure, but no class 
mixed classifier 
const Person = ( ()=> {// lexical scope 
    function Person(first, last) { // ctor, binding
        this.firstname = first;
        this.lastname = last;
    }
    Person.prototype.getName = function () {
        return this.firstname + " " + this.lastname; 
    };
    return Person;
}) (); //IIFE 
// new Person ("Good", "Boy") instance of person 
code::dive 2017 Douglas Crockford - The better parts
https://www.youtube.com/watch?v=DxnYQRuLX7Q
//Prototype 
classifies objects similar to a "type"
Manages shared properties 
is itself an object 

Remember:"New"
Creates a new Runtime-Scioe
calls the constructor-Function(cannot be a lambda)
sets the prototype 

oopsie
Throw dice and move forward as often as you want. Throw a 3 and 
you have to start over "OOpsie"


Fun at home
Complete oopsie for 2 players w ith the help of objectsextend with a new rule: you kick out the opponent (back to start)
when reaching exactly his field